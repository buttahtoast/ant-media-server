name: Build and Push Ant Media Server (Multi-Arch)

on:
  push:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * FRI'
  workflow_dispatch:

jobs:
  docker-buildx:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    env:
      IMAGE_REGISTRY: ghcr.io
      IMAGE_OWNER: ${{ github.repository_owner }}
      IMAGE_NAME: ${{ github.repository }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Fetch latest Ant Media Server release info
        id: antmedia
        run: |
          raw_tag=$(curl -s https://api.github.com/repos/ant-media/Ant-Media-Server/releases/latest | jq -r .tag_name)
          version=$(echo "$raw_tag" | sed -E 's/^ams-v?//')
          date=$(date +%Y%m%d)
          zip_name="ant-media-server-community-${version}.zip"
          echo "version=$version" >> $GITHUB_OUTPUT
          echo "date=$date" >> $GITHUB_OUTPUT
          echo "tag=$version-$date" >> $GITHUB_OUTPUT
          echo "zip_name=$zip_name" >> $GITHUB_OUTPUT

      - name: Download Ant Media Server ZIP
        run: |
          curl -L -o "antmedia.zip" \
            "https://github.com/ant-media/Ant-Media-Server/releases/download/ams-v${{ steps.antmedia.outputs.version }}/${{ steps.antmedia.outputs.zip_name }}"

      - name: Build and push multi-arch image to GHCR
        env:
          VERSION: ${{ steps.antmedia.outputs.version }}
          DATE: ${{ steps.antmedia.outputs.date }}
          TAG: ${{ steps.antmedia.outputs.tag }}
          ZIP_NAME: ${{ steps.antmedia.outputs.zip_name }}
        run: |
          IMAGE="ghcr.io/${{ github.repository }}"
          
          # Compose full tag names
          TAG_VERSION_DATE="${IMAGE}:${TAG}"           # e.g., 2.14.0-20250602
          TAG_VERSION_ONLY="${IMAGE}:${VERSION}"       # e.g., 2.14.0
          TAG_LATEST="${IMAGE}:latest"                 # rolling
      
          # Prepare build context
          mkdir -p build-context
          mv antmedia.zip build-context/${ZIP_NAME}
          cp Dockerfile build-context/
      
          # Build and push all tags
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --build-arg AntMediaServer=${ZIP_NAME} \
            --tag "$TAG_VERSION_DATE" \
            --tag "$TAG_VERSION_ONLY" \
            --tag "$TAG_LATEST" \
            --push \
            build-context
      